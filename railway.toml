# Railway configuration file

[build]
  # Define the Dockerfile that Railway will use to build the app
  dockerfile = "Dockerfile"
  # Specify the directory where the Dockerfile is located
  context = "."

[deploy]
  # Specify the service name on Railway
  service = "mvc-app-service"
  startCommand = "dotnet MyMvcApp.dll"

  # Define the environments for the app
  [deploy.production]
    # Use Railway's default deployment method for production
    num_instances = 1
    env = "production"

# Link to PostgreSQL service
[[services]]
  name = "postgres"
  type = "postgres"
  plan = "free"

[env]
  # Define environment variables for your app (if needed)
  ASPNETCORE_ENVIRONMENT = "Production"
  DOTNET_RUNNING_IN_CONTAINER = "true"
  PORT = "80"
  # Additional configuration for better error visibility in production
  ASPNETCORE_DETAILED_ERRORS = "true"
  LOGGING_LOGLEVEL_DEFAULT = "Information"
  LOGGING_LOGLEVEL_MICROSOFT = "Warning"
  LOGGING_LOGLEVEL_ENTITYFRAMEWORKCORE = "Information"

  # Note: The following variables will be automatically injected by Railway
  # DATABASE_URL
  # DATABASE_PUBLIC_URL
  # PGDATABASE
  # PGHOST
  # PGPASSWORD
  # PGPORT
  # PGUSER

[healthcheck]
  # Healthcheck to ensure the app is running properly
  path = "/home"
  interval = 10
  timeout = 5
  retries = 3
